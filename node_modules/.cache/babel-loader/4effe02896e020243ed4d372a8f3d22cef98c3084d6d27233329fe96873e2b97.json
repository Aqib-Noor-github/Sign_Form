{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ITEL\\\\featchapi\\\\src\\\\component\\\\StepTwo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// creating functional component ans getting props from app.js and destucturing them\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StepTwo = _ref => {\n  _s();\n  let {\n    nextStep,\n    handleFormData,\n    prevStep,\n    values\n  } = _ref;\n  //creating error state for validation\n  const [error, setError] = useState(false);\n\n  // after form submit validating the form data using validator\n  const submitFormData = e => {\n    e.preventDefault();\n\n    // checking if value of first name and last name is empty show error else take to next step\n    if (validator.isEmpty(values.age) || validator.isEmpty(values.email)) {\n      setError(true);\n    } else {\n      nextStep();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitFormData,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Age\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        style: {\n          border: error ? \"2px solid red\" : \"\"\n        },\n        type: \"number\",\n        placeholder: \"Age\",\n        onChange: handleFormData(\"age\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this), error ? /*#__PURE__*/_jsxDEV(Form.Text, {\n        style: {\n          color: \"red\"\n        },\n        children: \"This is a required field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        style: {\n          border: error ? \"2px solid red\" : \"\"\n        },\n        type: \"email\",\n        placeholder: \"email\",\n        onChange: handleFormData(\"email\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this), error ? /*#__PURE__*/_jsxDEV(Form.Text, {\n        style: {\n          color: \"red\"\n        },\n        children: \"This is a required field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-around\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: prevStep,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_s(StepTwo, \"AvrsuJm02Cqlq6/LWpvA21zDecQ=\");\n_c = StepTwo;\nexport default StepTwo;\nvar _c;\n$RefreshReg$(_c, \"StepTwo\");","map":{"version":3,"names":["React","useState","StepTwo","nextStep","handleFormData","prevStep","values","error","setError","submitFormData","e","preventDefault","validator","isEmpty","age","email","border","color","display","justifyContent"],"sources":["C:/Users/ITEL/featchapi/src/component/StepTwo.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\n// creating functional component ans getting props from app.js and destucturing them\r\nconst StepTwo = ({ nextStep, handleFormData, prevStep, values }) => {\r\n   //creating error state for validation\r\n  const [error, setError] = useState(false);\r\n\r\n    // after form submit validating the form data using validator\r\n  const submitFormData = (e) => {\r\n    e.preventDefault();\r\n\r\n     // checking if value of first name and last name is empty show error else take to next step\r\n    if (validator.isEmpty(values.age) || validator.isEmpty(values.email)) {\r\n      setError(true);\r\n    } else {\r\n      nextStep();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n     \r\n          <Form onSubmit={submitFormData}>\r\n            \r\n              <Form.Label>Age</Form.Label>\r\n              <Form.Control\r\n                style={{ border: error ? \"2px solid red\" : \"\" }}\r\n                type=\"number\"\r\n                placeholder=\"Age\"\r\n                onChange={handleFormData(\"age\")}\r\n              />\r\n              {error ? (\r\n                <Form.Text style={{ color: \"red\" }}>\r\n                  This is a required field\r\n                </Form.Text>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n           \r\n            \r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                style={{ border: error ? \"2px solid red\" : \"\" }}\r\n                type=\"email\"\r\n                placeholder=\"email\"\r\n                onChange={handleFormData(\"email\")}\r\n              />\r\n              {error ? (\r\n                <Form.Text style={{ color: \"red\" }}>\r\n                  This is a required field\r\n                </Form.Text>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n           \r\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n              <Button variant=\"primary\" onClick={prevStep}>\r\n                Previous\r\n              </Button>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n       \r\n    </>\r\n  );\r\n};\r\n\r\nexport default StepTwo;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAGvC;AAAA;AAAA;AACA,MAAMC,OAAO,GAAG,QAAoD;EAAA;EAAA,IAAnD;IAAEC,QAAQ;IAAEC,cAAc;IAAEC,QAAQ;IAAEC;EAAO,CAAC;EAC5D;EACD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;;EAEvC;EACF,MAAMQ,cAAc,GAAIC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,EAAE;;IAEjB;IACD,IAAIC,SAAS,CAACC,OAAO,CAACP,MAAM,CAACQ,GAAG,CAAC,IAAIF,SAAS,CAACC,OAAO,CAACP,MAAM,CAACS,KAAK,CAAC,EAAE;MACpEP,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,MAAM;MACLL,QAAQ,EAAE;IACZ;EACF,CAAC;EACD,oBACE;IAAA,uBAEM,QAAC,IAAI;MAAC,QAAQ,EAAEM,cAAe;MAAA,wBAE3B,QAAC,IAAI,CAAC,KAAK;QAAA,UAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QAAa,eAC5B,QAAC,IAAI,CAAC,OAAO;QACX,KAAK,EAAE;UAAEO,MAAM,EAAET,KAAK,GAAG,eAAe,GAAG;QAAG,CAAE;QAChD,IAAI,EAAC,QAAQ;QACb,WAAW,EAAC,KAAK;QACjB,QAAQ,EAAEH,cAAc,CAAC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAChC,EACDG,KAAK,gBACJ,QAAC,IAAI,CAAC,IAAI;QAAC,KAAK,EAAE;UAAEU,KAAK,EAAE;QAAM,CAAE;QAAA,UAAC;MAEpC;QAAA;QAAA;QAAA;MAAA,QAAY,GAEZ,EACD,eAGD,QAAC,IAAI,CAAC,KAAK;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAa,eAC9B,QAAC,IAAI,CAAC,OAAO;QACX,KAAK,EAAE;UAAED,MAAM,EAAET,KAAK,GAAG,eAAe,GAAG;QAAG,CAAE;QAChD,IAAI,EAAC,OAAO;QACZ,WAAW,EAAC,OAAO;QACnB,QAAQ,EAAEH,cAAc,CAAC,OAAO;MAAE;QAAA;QAAA;QAAA;MAAA,QAClC,EACDG,KAAK,gBACJ,QAAC,IAAI,CAAC,IAAI;QAAC,KAAK,EAAE;UAAEU,KAAK,EAAE;QAAM,CAAE;QAAA,UAAC;MAEpC;QAAA;QAAA;QAAA;MAAA,QAAY,GAEZ,EACD,eAEH;QAAK,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE;QAAe,CAAE;QAAA,wBAC9D,QAAC,MAAM;UAAC,OAAO,EAAC,SAAS;UAAC,OAAO,EAAEd,QAAS;UAAA,UAAC;QAE7C;UAAA;UAAA;UAAA;QAAA,QAAS,eAET,QAAC,MAAM;UAAC,OAAO,EAAC,SAAS;UAAC,IAAI,EAAC,QAAQ;UAAA,UAAC;QAExC;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACL;IAAA;MAAA;MAAA;MAAA;IAAA;EACD,iBAEV;AAEP,CAAC;AAAC,GAhEIH,OAAO;AAAA,KAAPA,OAAO;AAkEb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}