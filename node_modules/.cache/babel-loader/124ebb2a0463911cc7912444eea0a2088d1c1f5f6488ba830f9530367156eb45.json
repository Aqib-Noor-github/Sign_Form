{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ITEL\\\\featchapi\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { Stepper } from \"react-form-stepper\";\nimport { Progress } from \"antd\";\nimport Personal_Information from \"./Components/Personal_Information\";\nimport Image_Information from \"./Components/Image_Information\";\nimport Result from \"./Components/Result\";\nimport Account_Information from \"./Components/Account_Information\";\nimport Stepper_code from \"./Components/Stepper_code\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [step, setstep] = useState(1);\n  let stepupdate = step;\n  const [formData, setFormData] = useState({\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    confirmpassword: \"\"\n  });\n  const [FormData_personal_info, setFormData_personal_info] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    contact: \"\",\n    altenatecontact: \"\"\n  });\n  const [state, setstate] = useState(1);\n  const nextState = () => {\n    setstate(state + 1);\n    console.log(state);\n    return nextState;\n  };\n  const nextStep = () => {\n    setstep(step + 1);\n    console.log(step);\n  };\n  const prevStep = () => {\n    setstep(stepupdate - 1);\n    console.log(stepupdate);\n  };\n  const handleInputData = input => e => {\n    // input value from the form\n    const {\n      value\n    } = e.target;\n    console.log(value);\n    //updating for data state taking previous state and then adding new value to create new object\n    setFormData(prevState => ({\n      ...prevState,\n      [input]: value\n    }));\n  };\n  const handleInputData_personal_info = input => e => {\n    // input value from the form\n    const {\n      value\n    } = e.target;\n    console.log(value);\n    //updating for data state taking previous state and then adding new value to create new object\n    setFormData_personal_info(prevState => ({\n      ...prevState,\n      [input]: value\n    }));\n  };\n  switch (step) {\n    case 1:\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Stepper_code, {\n          currentStep: step,\n          style: {\n            color: 'blue',\n            lineHeight: 10,\n            padding: 50\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Progress, {\n          strokeLinecap: \"butt\",\n          percent: 25\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Account_Information, {\n          nextStep: nextStep,\n          handleFormData: handleInputData,\n          values: formData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    case 2:\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Stepper_code, {\n          currentStep: step,\n          style: {\n            color: 'blue',\n            lineHeight: 10,\n            padding: 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Progress, {\n          strokeLinecap: \"butt\",\n          percent: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Personal_Information, {\n          nextStep: nextStep,\n          prevStep: prevStep,\n          handleFormData_personal_info: handleInputData_personal_info,\n          values: FormData_personal_info,\n          nextState: nextState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    case 3:\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Stepper_code, {\n          currentStep: step,\n          style: {\n            color: 'blue',\n            lineHeight: 10,\n            padding: 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Progress, {\n          strokeLinecap: \"butt\",\n          percent: 75\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Image_Information, {\n          nextStep: nextStep,\n          prevStep: prevStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    case 4:\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Stepper_code, {\n          currentStep: step,\n          className: \"progress_line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Progress, {\n          strokeLinecap: \"butt\",\n          percent: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Result, {\n          values: formData,\n          values2: FormData_personal_info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    default:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 14\n      }, this);\n  }\n}\n_s(App, \"VtJVWAxb0i7ZhqgJWgkjDWIQ+xM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Stepper","Progress","Personal_Information","Image_Information","Result","Account_Information","Stepper_code","App","step","setstep","stepupdate","formData","setFormData","email","username","password","confirmpassword","FormData_personal_info","setFormData_personal_info","firstName","lastName","contact","altenatecontact","state","setstate","nextState","console","log","nextStep","prevStep","handleInputData","input","e","value","target","prevState","handleInputData_personal_info","color","lineHeight","padding"],"sources":["C:/Users/ITEL/featchapi/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport { Stepper } from \"react-form-stepper\";\nimport { Progress } from \"antd\";\n\nimport Personal_Information from \"./Components/Personal_Information\";\nimport Image_Information from \"./Components/Image_Information\";\nimport Result from \"./Components/Result\";\nimport Account_Information from \"./Components/Account_Information\";\nimport Stepper_code from \"./Components/Stepper_code\";\n\n\nfunction App() {\n\n  const [step, setstep] = useState(1);\n  let stepupdate = step;\n  const [formData, setFormData] = useState({\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    confirmpassword: \"\",\n  });\n  const [FormData_personal_info, setFormData_personal_info] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    contact: \"\",\n    altenatecontact: \"\",\n  });\n\n  const [state, setstate] = useState(1);\n\n  const nextState = () => {\n    setstate(state + 1);\n    console.log(state);\n    return nextState;\n  };\n\n  const nextStep = () => {\n    setstep(step + 1);\n    console.log(step);\n  };\n  const prevStep = () => {\n    setstep(stepupdate - 1);\n    console.log(stepupdate);\n  };\n  const handleInputData = (input) => (e) => {\n    // input value from the form\n    const { value } = e.target;\n    console.log(value);\n    //updating for data state taking previous state and then adding new value to create new object\n    setFormData((prevState) => ({\n      ...prevState,\n      [input]: value,\n    }));\n  };\n  const handleInputData_personal_info = (input) => (e) => {\n    // input value from the form\n    const { value } = e.target;\n    console.log(value);\n    //updating for data state taking previous state and then adding new value to create new object\n    setFormData_personal_info((prevState) => ({\n      ...prevState,\n      [input]: value,\n    }));\n  };\n  switch (step) {\n    case 1:\n      return (\n        <>\n          <Stepper_code currentStep={step} style={{ color: 'blue', lineHeight : 10, padding: 50 }}/>\n          <Progress strokeLinecap=\"butt\" percent={25} />\n\n          <Account_Information\n            nextStep={nextStep}\n            handleFormData={handleInputData}\n            values={formData}\n          />\n        </>\n      );\n    case 2:\n      return (\n        <>\n          <Stepper_code currentStep={step} style={{ color: 'blue', lineHeight : 10, padding: 20 }}/>\n          <Progress strokeLinecap=\"butt\" percent={50} />\n\n          <Personal_Information\n            nextStep={nextStep}\n            prevStep={prevStep}\n            handleFormData_personal_info={handleInputData_personal_info}\n            values={FormData_personal_info}\n            nextState={nextState}\n          />\n        </>\n      );\n    case 3:\n      return (\n        <>\n          <Stepper_code currentStep={step} style={{ color: 'blue', lineHeight : 10, padding: 20 }} />\n          <Progress strokeLinecap=\"butt\" percent={75} />\n\n          <Image_Information nextStep={nextStep} prevStep={prevStep} />\n        </>\n      );\n    case 4:\n      return (\n        <>\n          <Stepper_code currentStep={step} className=\"progress_line\" />\n          <Progress strokeLinecap=\"butt\" percent={100} />\n          <Result values={formData} values2={FormData_personal_info} />\n        </>\n      );\n    default:\n      return <div className=\"App\"></div>;\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}