{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ITEL\\\\featchapi\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Sign_Account from \"./component/Sign_Account\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // step for state\n  const [step, setStep] = useState(1);\n\n  // function going to the next steep\n  const nextStep = () => {\n    setstep(step + 1);\n  };\n\n  // function going to previous step\n  const prevStep = () => {\n    setstep(step - 1);\n  };\n  const initialValues = {\n    Email: \"\",\n    username: \"\",\n    Password: \"\",\n    Confirmpasswod: \"\",\n    step: 1\n  };\n  const [formValues, setFormValues] = useState(initialValues);\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmit, setIsSubmint] = useState(false);\n  const handleChange = e => {\n    // console.log(e)\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues({\n      ...formValues,\n      [name]: value\n    });\n    // console.log(setFormValues);\n    // console.log(formValues);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setFormErrors(validate(formValues));\n    setIsSubmint(true);\n  };\n  useEffect(() => {\n    // console.log (formErrors)\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\n\n      // console.log (stepUpdate)\n    }\n  }, [formErrors]);\n  const validate = values => {\n    const errors = {};\n    const regex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    if (!values.Email) {\n      errors.Email = \" Email is required ! \";\n    } else if (!regex.test(values.Email)) {\n      errors.Email = \"this is not a valid email format\";\n    }\n    if (!values.username) {\n      errors.username = \" User Name is required ! \";\n    }\n    if (!values.Password) {\n      errors.Password = \" Password is required ! \";\n    }\n    if (!values.Confirmpasswod) {\n      errors.Confirmpasswod = \" Confirm password is required ! \";\n    } else if (values.Password != values.Confirmpasswod) {\n      errors.Confirmpasswod = \" Confirm password is not same !\";\n    }\n    return errors;\n  };\n  switch (step) {\n    case 1:\n      return /*#__PURE__*/_jsxDEV(Sign_Account, {\n        nextStep: nextStep,\n        handleChange: handleInputData,\n        values: formData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sL946IU6GZhxrhXewW9YgSaQVio=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Sign_Account","App","step","setStep","nextStep","setstep","prevStep","initialValues","Email","username","Password","Confirmpasswod","formValues","setFormValues","formErrors","setFormErrors","isSubmit","setIsSubmint","handleChange","e","name","value","target","handleSubmit","preventDefault","validate","useEffect","Object","keys","length","values","errors","regex","test","handleInputData","formData"],"sources":["C:/Users/ITEL/featchapi/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport Sign_Account from \"./component/Sign_Account\";\n\n function App(){\n\n  // step for state\n  const[step, setStep] = useState(1);\n\n  // function going to the next steep\n  const nextStep = () => {\n    setstep(step + 1);\n  };\n\n  // function going to previous step\n  const prevStep = () => {\n    setstep(step - 1);\n  };\n  const initialValues = {\n    Email: \"\",\n    username: \"\",\n    Password: \"\",\n    Confirmpasswod: \"\",\n    step:1,\n  };\n  const [formValues, setFormValues] = useState(initialValues);\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmit , setIsSubmint] = useState(false);\n \n\n  \n  \n\n  const handleChange = (e) => {\n    // console.log(e)\n    const { name, value } = e.target;  \n    setFormValues({...formValues, [name]: value}  );\n    // console.log(setFormValues);\n    // console.log(formValues);\n  };\n  const handleSubmit =(e)=>{\n      e.preventDefault();\n      setFormErrors(validate(formValues))\n      setIsSubmint(true);\n     \n  \n      \n      \n      \n  }\n  useEffect (() =>{\n    // console.log (formErrors)\n      if (Object.keys(formErrors).length === 0 &&  isSubmit ){\n        \n        // console.log (stepUpdate)\n      }\n  },[formErrors])\n  \n  const validate =(values)=>{\n      const errors ={};\n      const regex =  /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n      if (!values.Email){\n        errors.Email = \" Email is required ! \"\n      }else if (!regex.test(values.Email)){\n        errors.Email = \"this is not a valid email format\"\n      }\n      if (!values.username){\n        errors.username = \" User Name is required ! \"\n      }\n      if (!values.Password){\n        errors.Password = \" Password is required ! \"\n      }\n      if (!values.Confirmpasswod){\n        errors.Confirmpasswod = \" Confirm password is required ! \"\n      }else if (values.Password != values.Confirmpasswod){\n        errors.Confirmpasswod = \" Confirm password is not same !\"\n      }\n       return errors; \n  }\n   switch(step){\n\n    case 1 :\n      return(\n        <Sign_Account  nextStep={nextStep} handleChange={handleInputData} values={formData} />\n      )\n    \n   }\n  return (\n    <div className='app' >\n\n     \n    </div>\n  );\n }\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}