{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ITEL\\\\featchapi\\\\src\\\\Components\\\\Account_Information.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./Account_information.css\";\nimport { Form, Card, Button } from \"react-bootstrap\";\nimport validator from \"validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Account_Information(_ref) {\n  _s();\n  let {\n    nextStep,\n    handleFormData,\n    values,\n    nextState\n  } = _ref;\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [errorUsername, setErrorUsername] = useState(false);\n  const [errorPassword, setErrorPassword] = useState(false);\n  const [errorConfirmPassword, setErrorConfirmPassword] = useState(false);\n  const submitFormData = e => {\n    e.preventDefault();\n    if (validator.isEmpty(values.email)) {\n      setErrorEmail(true);\n    }\n    if (validator.isEmpty(values.username)) {\n      setErrorUsername(true);\n    }\n    if (validator.isEmpty(values.password)) {\n      setErrorPassword(true);\n    }\n    if (validator.isEmpty(values.confirmpassword)) {\n      setErrorConfirmPassword(true);\n    }\n    if (validator.isEmpty(values.password) === validator.isEmpty(values.confirmpassword)) {\n      setErrorPassword(false);\n      setErrorConfirmPassword(true);\n    } else {\n      nextStep();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text\",\n        children: [\"SIGN UP YOUR ACCOUNT\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" fill all form field to go to next step\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_steps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitFormData,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Account Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" 1-4 step\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Email:*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            defaultValue: values.email,\n            placeholder: \"Enter your Email\",\n            onChange: handleFormData(\"email\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), errorEmail ? /*#__PURE__*/_jsxDEV(Form.Text, {\n            style: {\n              color: \"red\"\n            },\n            children: \"This is a required field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this) : \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" User Name:*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            defaultValue: values.username,\n            placeholder: \"Enter your User Name\",\n            onChange: handleFormData(\"username\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), errorUsername ? /*#__PURE__*/_jsxDEV(Form.Text, {\n            style: {\n              color: \"red\"\n            },\n            children: \"This is a required field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Password:*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            defaultValue: values.password,\n            placeholder: \"Enter your password\",\n            onChange: handleFormData(\"password\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), errorPassword ? /*#__PURE__*/_jsxDEV(Form.Text, {\n            style: {\n              color: \"red\"\n            },\n            children: \"This is a required field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Confirm Password:*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"confirmpassword\",\n            defaultValue: values.confirmpassword,\n            placeholder: \"Enter your password\",\n            onChange: handleFormData(\"confirmpassword\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), errorConfirmPassword ? values.confirmpassword == \"\" ? /*#__PURE__*/_jsxDEV(Form.Text, {\n            style: {\n              color: \"red\"\n            },\n            children: \"This is a required field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Form.Text, {\n            style: {\n              color: \"red\"\n            },\n            children: \"Password does not match\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"next_btn btn1 \",\n            children: [\" \", \"Next\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Account_Information, \"keRQSkNeaXiqyyNST84vUzMs4O4=\");\n_c = Account_Information;\nexport default Account_Information;\nvar _c;\n$RefreshReg$(_c, \"Account_Information\");","map":{"version":3,"names":["useState","Form","Card","Button","validator","Account_Information","nextStep","handleFormData","values","nextState","errorEmail","setErrorEmail","errorUsername","setErrorUsername","errorPassword","setErrorPassword","errorConfirmPassword","setErrorConfirmPassword","submitFormData","e","preventDefault","isEmpty","email","username","password","confirmpassword","color"],"sources":["C:/Users/ITEL/featchapi/src/Components/Account_Information.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./Account_information.css\";\r\nimport { Form, Card, Button } from \"react-bootstrap\";\r\nimport validator from \"validator\";\r\n\r\nfunction Account_Information({ nextStep, handleFormData, values, nextState }) {\r\n  const [errorEmail, setErrorEmail] = useState(false);\r\n  const [errorUsername, setErrorUsername] = useState(false);\r\n  const [errorPassword, setErrorPassword] = useState(false);\r\n  const [errorConfirmPassword, setErrorConfirmPassword] = useState(false);\r\n\r\n  const submitFormData = (e) => {\r\n    e.preventDefault();\r\n    if (validator.isEmpty(values.email)) {\r\n      setErrorEmail(true);\r\n    }\r\n    if (validator.isEmpty(values.username)) {\r\n      setErrorUsername(true);\r\n    }\r\n    if (validator.isEmpty(values.password)) {\r\n      setErrorPassword(true);\r\n    }\r\n    if (validator.isEmpty(values.confirmpassword)) {\r\n      setErrorConfirmPassword(true);\r\n    }\r\n    if (\r\n      validator.isEmpty(values.password) ===\r\n      validator.isEmpty(values.confirmpassword)\r\n      \r\n      )\r\n     {\r\n      setErrorPassword(false);\r\n      setErrorConfirmPassword(true);\r\n    } else {\r\n      nextStep();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"main_container\">\r\n        <p className=\"text\">\r\n          SIGN UP YOUR ACCOUNT{\" \"}\r\n          <span> fill all form field to go to next step</span>\r\n        </p>\r\n        <div className=\"form_steps\">\r\n          {/* <ul>\r\n                    <li>Account </li>\r\n                    <li>Personal </li>\r\n                    <li>Image </li>\r\n                    <li>Finish </li>\r\n\r\n                </ul> */}\r\n        </div>\r\n        <form onSubmit={submitFormData}>\r\n          <div className=\"heading\">\r\n            <h2> Account Information</h2>\r\n            <p> 1-4 step</p>\r\n          </div>\r\n\r\n          <div className=\"fields\">\r\n            <label> Email:*</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              defaultValue={values.email}\r\n              placeholder=\"Enter your Email\"\r\n              onChange={handleFormData(\"email\")}\r\n            />\r\n            {errorEmail ? (\r\n              <Form.Text style={{ color: \"red\" }}>\r\n                This is a required field\r\n              </Form.Text>\r\n            ) : (\r\n              \" \"\r\n            )}\r\n          </div>\r\n          <div className=\"fields\">\r\n            <label> User Name:*</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              defaultValue={values.username}\r\n              placeholder=\"Enter your User Name\"\r\n              onChange={handleFormData(\"username\")}\r\n            />\r\n            {errorUsername ? (\r\n              <Form.Text style={{ color: \"red\" }}>\r\n                This is a required field\r\n              </Form.Text>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"fields\">\r\n            <label> Password:*</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              defaultValue={values.password}\r\n              placeholder=\"Enter your password\"\r\n              onChange={handleFormData(\"password\")}\r\n            />\r\n            {errorPassword ? (\r\n              <Form.Text style={{ color: \"red\" }}>\r\n                This is a required field\r\n              </Form.Text>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"fields\">\r\n            <label> Confirm Password:*</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"confirmpassword\"\r\n              defaultValue={values.confirmpassword}\r\n              placeholder=\"Enter your password\"\r\n              onChange={handleFormData(\"confirmpassword\")}\r\n            />\r\n            {errorConfirmPassword ? (\r\n              values.confirmpassword == \"\" ? (\r\n                <Form.Text style={{ color: \"red\" }}>\r\n                  This is a required field\r\n                </Form.Text>\r\n              ) : (\r\n                <Form.Text style={{ color: \"red\" }}>\r\n                  Password does not match\r\n                </Form.Text>\r\n              )\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"button\">\r\n            <button type=\"submit\" className=\"next_btn btn1 \">\r\n              {\" \"}\r\n              Next\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Account_Information;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}